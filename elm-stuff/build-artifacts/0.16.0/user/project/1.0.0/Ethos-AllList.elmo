Elm.Ethos = Elm.Ethos || {};
Elm.Ethos.AllList = Elm.Ethos.AllList || {};
Elm.Ethos.AllList.make = function (_elm) {
   "use strict";
   _elm.Ethos = _elm.Ethos || {};
   _elm.Ethos.AllList = _elm.Ethos.AllList || {};
   if (_elm.Ethos.AllList.values) return _elm.Ethos.AllList.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Ethos = Elm.Ethos.make(_elm),
   $Ethos$Data = Elm.Ethos.Data.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $String = Elm.String.make(_elm),
   $Update = Elm.Update.make(_elm);
   var _op = {};
   var onClickAction = F2(function (isSelected,ethos) {
      return isSelected ? $Update.DeselectEthos(ethos) : $Update.SelectEthos(ethos);
   });
   var buildViewModel = F2(function (selectedEthoses,ethos) {
      var slug = A2($String.join,
      "-",
      $String.words($String.toLower(ethos.name)));
      return {name: ethos.name
             ,slug: slug
             ,isSelected: A2($Ethos.isSelected,selectedEthoses,ethos)};
   });
   var showOne = F3(function (address,selectedEthoses,ethos) {
      var model = A2(buildViewModel,selectedEthoses,ethos);
      return A2($Html.li,
      _U.list([$Html$Attributes.classList(_U.list([{ctor: "_Tuple2"
                                                   ,_0: "ethos"
                                                   ,_1: true}
                                                  ,{ctor: "_Tuple2",_0: model.slug,_1: true}
                                                  ,{ctor: "_Tuple2",_0: "selected",_1: model.isSelected}]))
              ,A2($Html$Events.onMouseEnter,address,$Update.HoverEthos(ethos))
              ,A2($Html$Events.onMouseLeave,address,$Update.DehoverEthos)
              ,A2($Html$Events.onClick,
              address,
              A2(onClickAction,model.isSelected,ethos))]),
      _U.list([$Html.text(model.name)]));
   });
   var show = F2(function (address,selectedEthoses) {
      var remainingPoints = $Ethos.remainingPoints(selectedEthoses);
      var title = A2($Basics._op["++"],
      "Ethoses (",
      A2($Basics._op["++"],
      $Basics.toString(remainingPoints),
      " points left)"));
      return A2($Html.div,
      _U.list([$Html$Attributes.$class("all-ethoses")]),
      _U.list([A2($Html.h2,_U.list([]),_U.list([$Html.text(title)]))
              ,A2($Html.ul,
              _U.list([]),
              A2($List.map,
              A2(showOne,address,selectedEthoses),
              $Ethos$Data.all))]));
   });
   var ViewModel = F3(function (a,b,c) {
      return {name: a,slug: b,isSelected: c};
   });
   return _elm.Ethos.AllList.values = {_op: _op,show: show};
};